# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Tue May 21 13:44:04 2024
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b''))
